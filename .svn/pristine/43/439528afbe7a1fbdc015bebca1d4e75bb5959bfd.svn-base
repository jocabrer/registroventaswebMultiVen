<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class comun {

	/*public function procesaFecha($fechaActual)
	{
		return date('Y/m/d H:i:s', strtotime ( $fechaActual ['year'] . "/" . $fechaActual ['mon'] . "/" . $fechaActual ['mday']. " ".
				$fechaActual ['hours'] . ":".$fechaActual ['minutes'].":".$fechaActual ['seconds']  ) );
	}*/
	
	
	/*public function jsonEncode($data)
	{
		// Transformo los nombres para evitar problemas entre JSON y los tildes y otros caracteres
		foreach ( $data as $key => $value ) {
			$data [$key] ['nombre'] = utf8_encode ( $value ['nombre'] );
		}
		return json_encode ( $data );
	}*/
    
    //1.- Pasar la fecha inicial y final a maketime y obtener un arreglo con todas los días intermedios.
    function DiasHabiles($fecha_inicial,$fecha_final)
    {
        
        //echo $fecha_inicial. " - " . $fecha_final;
        //exit(0);
        
        
        
        $newArray = array();
        list($year,$mes,$dia) = explode("-",$fecha_inicial);
        $ini = mktime(0, 0, 0, $mes , $dia, $year);
        list($yearf,$mesf,$diaf) = explode("-",$fecha_final);
        $fin = mktime(0, 0, 0, $mesf , $diaf, $yearf);
        
        $r = 1;
        while($ini != $fin)
        {
            $ini = mktime(0, 0, 0, $mes , $dia+$r, $year);
            //echo "ini = ". $ini ."
            //";
            $newArray[] .=$ini;
            $r++;
        }
        return $newArray;
    }
    
    //2.- Una función que evalué el arreglo de fechas obtenido, que contenga los feriados nacionales que correspondan (restando) y que reste los sábados y domingos.
    
    function Evalua($arreglo)
    {
       
        
        $feriados = array(
            '1-1', // Año Nuevo (irrenunciable)
            '10-4', // Viernes Santo (feriado religioso)
            '11-4', // Sábado Santo (feriado religioso)
            '1-5', // Día Nacional del Trabajo (irrenunciable)
            '21-5', // Día de las Glorias Navales
            '29-6', // San Pedro y San Pablo (feriado religioso)
            '16-7', // Virgen del Carmen (feriado religioso)
            '15-8', // Asunción de la Virgen (feriado religioso)
            '19-9', // Dia Festivo De Prueba EN EL EJEMPLO <-----
            '12-10', // Aniversario del Descubrimiento de América
            '31-10', // Día Nacional de las Iglesias Evangélicas y Protestantes (feriado religioso)
            '1-11', // Día de Todos los Santos (feriado religioso)
            '8-12', // Inmaculada Concepción de la Virgen (feriado religioso)
            '13-12', // elecciones presidencial y parlamentarias (puede que se traslade al domingo 13)
            '25-12', // Natividad del Señor (feriado religioso) (irrenunciable)
        );
        
        $j= count($arreglo);
        $dia_NoLab = 0;
        $dia = 0;
        
        for($i=0;$i<$j;$i++)
        {
            $dia = $arreglo[$i];
            
            $fecha = getdate($dia);
            $feriado = $fecha['mday']."-".$fecha['mon'];
            if($fecha["wday"]==0 or $fecha["wday"]==6)
            {
                $dia_NoLab++;
                //    echo "Dia Fin de Semana ". $feriado ."
                //";
            }
            elseif(in_array($feriado,$feriados))
            {
                $dia_NoLab++;
                //      echo "Dia Festivo dentro del Arreglo de Festivos ". $feriado ."
                //";
            }
        }
        $rlt = $j - $dia_NoLab;
        //echo "j= ". $j ." i= ". $i ."
        //";
        return $rlt;
    }
    
    
    function transformaStringFecha($fecha_ingreso)
    {
        $temp1  =  explode('-', $fecha_ingreso);
        $temp1[2] = substr($temp1[2], 0,2);
        return new DateTime(join('-',$temp1 ));
        //exit(0);
    }
    
    
    function cuentaDias($fecha_ingreso,$fecha_actual){
        
        $contador = 0;
        $fecha_aux=$fecha_ingreso;
        //Get the day of the week using PHP's date function.
      
        
        //echo  $diadelasemana;
        while($fecha_aux < $fecha_actual){
            
            $fecha_aux= $fecha_aux->add(new DateInterval('P1D'));
            
            if($fecha_aux<=$fecha_actual)
            {
                $diadelasemana = date("l", strtotime(date_format($fecha_aux,"Y-m-d")));
                //echo $diadelasemana;
                if($diadelasemana !="Sunday" && $diadelasemana!="Saturday")
                    $contador++;
            }
        }
        
        return $contador;
                
    }
    
    
    
}