/*
* Formatea un monto como divisa
*/




function PriceFormatter(data) {
	
	if (data == null)
		return null;	
	var num = data;//.value.replace(/\./g,'');
	if(!isNaN(num)){
	num = num.toString().split('').reverse().join('').replace(/(?=\d*\.?)(\d{3})/g,'$1.');
	num = num.split('').reverse().join('').replace(/^[\.]/,'');
	return "$ " + num;
	}
	 
	else{/* alert('Solo se permiten numeros');*/
	return "$ " + num;
	}
}

/*
 * Setea controles para tabla 
 * */
function operateFormatter(value, row, index) {
    return [
        '<a class="like" href="javascript:void(0)" title="Like">',
        '<i class="glyphicon glyphicon-heart"></i>',
        '</a>  ',
        '<a class="remove" href="javascript:void(0)" title="Remove">',
        '<i class="glyphicon glyphicon-remove"></i>',
        '</a>'
    ].join('');
}
/*
 * Funcion que formatea la vista de detalle de una bootstrap table
 */
function detailFormatter(index, row) {
    var html = [];
    $.each(row, function (key, value) {
        html.push('<p><b>' + key + ':</b> ' + value + '</p>');
    });
    return html.join('');
}


/*
 *Fomatea el estado abreviado. 
 */
function FormatoEstado(data)
{
	switch(data)
	{
		case "0": return "<span class='label label-danger'>Ingresado</span>";
		case "1": return "<span class='label label-info'>En Fabricacion.<span>";
		case "2": return "<span class='label label-warning'>Esperando</span>";
		case "3": return "<span class='label label-success'>Listo</span>";
	}
}

/*
 * Fomatea el formato del valor en BD de si es comisi√≥n o no
 */
function FormatoComision(data)
{
	switch(data)
	{
		case "0": return "<span class='label label-danger'>NO</span>";
		case "1": return "<span class='label label-warning'>SI<span>";
	
	}	
}

/*
 * Formatea el link hacia el detalle del pedido
 */
function f_idpedido(data){
	return['<a href="'+base_url+'Pedido/nuevoPedido/',data,'">',data,'</a>'].join('');
}

function f_comprobante(data){
	return['<a href="'+base_url+'Comprobante/verComprobante/',data,'">','<i class="fa fa-fw fa-file-o"></i>','</a>'].join('');
}

function f_cliente(value, row, index){
	return['<a href="'+base_url+'Cliente/edicion/',row.cli_id,'">',row.cli_nom,'</a>'].join('');
}




function capitalizeFirstLetter(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
}


function runningFormatter(value, row, index) {
    return index;
}

function totalTextFormatter(data) {
    return 'Total';
}

function totalFormatter(data) {
    return data.length;
}

function sumFormatter(data){
    field = this.field;
    return PriceFormatter(data.reduce(function(sum, row) { 
        return sum + (+row[field]);
    }, 0));
}

function avgFormatter(data){
    return sumFormatter.call(this, data) / data.length;
}

function i_prod(data){
	return['<a href="<?php echo base_url(); ?>Productos/agregar/',data,'">',data,'</a>'].join('');
}

